
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id "com.google.protobuf" version "0.8.12"
    id "com.google.devtools.ksp" version "1.6.10-1.0.4"
}

kotlin {
    sourceSets {
        debug {
            kotlin.srcDir("build/generated/ksp/debug/kotlin")
        }
        release {
            kotlin.srcDir("build/generated/ksp/release/kotlin")
        }
    }
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.nullpointer.blogcompose"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    // * clear advertising experimentalAnnotation
    kotlin.sourceSets.all {
        languageSettings.useExperimentalAnnotation("kotlin.RequiresOptIn")
    }
}


dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.compose.ui:ui:1.1.1"
    implementation "androidx.compose.material:material:1.1.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.1.1"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.0'
    implementation 'androidx.activity:activity-compose:1.5.0'
    implementation 'androidx.lifecycle:lifecycle-service:2.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.1.1"
    debugImplementation "androidx.compose.ui:ui-tooling:1.1.1"

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0'

    // * navigation compose
    implementation "androidx.navigation:navigation-compose:2.5.0"
    implementation 'io.github.raamcosta.compose-destinations:core:1.5.12-beta'
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.5.12-beta'

    implementation 'com.facebook.android:facebook-login:13.0.0'

    // * hilt
    def daggerHiltVersion = '2.42'
    implementation "com.google.dagger:hilt-android:$daggerHiltVersion"
    kapt "com.google.dagger:hilt-compiler:$daggerHiltVersion"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    // ? hilt test
    testImplementation "com.google.dagger:hilt-android-testing:$daggerHiltVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$daggerHiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$daggerHiltVersion"

    // * room
    def roomVersion="2.4.2"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"

    // * Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.orhanobut:logger:2.2.0'

    // * coil
    implementation("io.coil-kt:coil-compose:2.0.0")

    // * swipe refresh
    implementation "com.google.accompanist:accompanist-swiperefresh:0.24.3-alpha"


    // * Firebase
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.android.gms:play-services-auth:20.2.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.1'
    implementation 'com.google.firebase:firebase-functions-ktx'

    // * paddings
    implementation "com.google.accompanist:accompanist-insets:0.24.1-alpha"
    implementation "com.google.accompanist:accompanist-insets-ui:0.24.1-alpha"

    // * save state view model
    implementation "androidx.savedstate:savedstate-ktx:1.2.0"

    // * img compress
    implementation 'com.github.Shouheng88:compressor:1.6.0'

    // * splash
    implementation 'androidx.core:core-splashscreen:1.0.0-rc01'

    // * data store
    implementation("androidx.datastore:datastore:1.0.0")
    implementation("androidx.datastore:datastore-preferences:1.0.0")
    implementation "com.google.protobuf:protobuf-javalite:3.17.2"

    // * shimmer effect
    implementation 'com.valentinilk.shimmer:compose-shimmer:1.0.2'

    // *lottie compose
    implementation "com.airbnb.android:lottie-compose:5.1.1"

    implementation 'com.google.code.gson:gson:2.8.9'



}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.11.0"
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

